// <auto-generated />
using System;
using Infrastructure.AG_EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.AG_EF.Migrations
{
    [DbContext(typeof(AvansGreenDbContext))]
    partial class AvansGreenDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Core.Domain.Canteen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("City")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Canteens");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = 0,
                            Location = "LA5"
                        },
                        new
                        {
                            Id = 2,
                            City = 0,
                            Location = "H1"
                        },
                        new
                        {
                            Id = 3,
                            City = 0,
                            Location = "LD1"
                        },
                        new
                        {
                            Id = 4,
                            City = 1,
                            Location = "TH1"
                        });
                });

            modelBuilder.Entity("Core.Domain.CanteenEmployee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CanteenId")
                        .HasColumnType("int");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeNr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CanteenId");

                    b.ToTable("CanteenEmployees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CanteenId = 1,
                            EmailAddress = "n.devries@avans.nl",
                            EmployeeNr = "1234567",
                            Name = "n.devries"
                        },
                        new
                        {
                            Id = 2,
                            CanteenId = 2,
                            EmailAddress = "p.smit@avans.nl",
                            EmployeeNr = "1111111",
                            Name = "p.smit"
                        },
                        new
                        {
                            Id = 3,
                            CanteenId = 4,
                            EmailAddress = "l.degroot@avans.nl",
                            EmployeeNr = "2222222",
                            Name = "l.degroot"
                        });
                });

            modelBuilder.Entity("Core.Domain.Packet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CanteenId")
                        .HasColumnType("int");

                    b.Property<bool>("IsAlcoholic")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PickUpTimeEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PickUpTimeStart")
                        .HasColumnType("datetime2");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeOfPickUpByStudent")
                        .HasColumnType("datetime2");

                    b.Property<int>("TypeOfMeal")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CanteenId");

                    b.HasIndex("StudentId");

                    b.ToTable("Packets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CanteenId = 1,
                            IsAlcoholic = false,
                            Name = "Alcoholic beverage and snack",
                            PickUpTimeEnd = new DateTime(2022, 10, 20, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            PickUpTimeStart = new DateTime(2022, 10, 20, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 5.0,
                            TimeOfPickUpByStudent = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TypeOfMeal = 2
                        },
                        new
                        {
                            Id = 2,
                            CanteenId = 2,
                            IsAlcoholic = false,
                            Name = "Lunch with two sandwiches",
                            PickUpTimeEnd = new DateTime(2022, 10, 21, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            PickUpTimeStart = new DateTime(2022, 10, 21, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 5.5,
                            TimeOfPickUpByStudent = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TypeOfMeal = 0
                        });
                });

            modelBuilder.Entity("Core.Domain.PacketProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("PacketId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PacketId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductsInPacket");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PacketId = 1,
                            ProductId = 1
                        },
                        new
                        {
                            Id = 2,
                            PacketId = 1,
                            ProductId = 4
                        },
                        new
                        {
                            Id = 3,
                            PacketId = 2,
                            ProductId = 3
                        });
                });

            modelBuilder.Entity("Core.Domain.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<byte[]>("ImageData")
                        .HasColumnType("varbinary(max)");

                    b.Property<bool>("IsAlcoholic")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsAlcoholic = true,
                            Name = "Bottle of vodka"
                        },
                        new
                        {
                            Id = 2,
                            IsAlcoholic = false,
                            Name = "Panini"
                        },
                        new
                        {
                            Id = 3,
                            IsAlcoholic = false,
                            Name = "Sandwich"
                        },
                        new
                        {
                            Id = 4,
                            IsAlcoholic = false,
                            Name = "Apple"
                        },
                        new
                        {
                            Id = 5,
                            IsAlcoholic = false,
                            Name = "Soup"
                        },
                        new
                        {
                            Id = 6,
                            IsAlcoholic = false,
                            Name = "Baguette"
                        });
                });

            modelBuilder.Entity("Core.Domain.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CityOfSchool")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentNr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CityOfSchool = 0,
                            DateOfBirth = new DateTime(1998, 11, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailAddress = "je.boellaard@student.avans.nl",
                            Name = "Joy Boellaard",
                            PhoneNr = "0612345678",
                            StudentNr = "2182556"
                        },
                        new
                        {
                            Id = 2,
                            CityOfSchool = 0,
                            DateOfBirth = new DateTime(2000, 1, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailAddress = "em.degroot@student.avans.nl",
                            Name = "Emma de Groot",
                            PhoneNr = "0623456789",
                            StudentNr = "2192233"
                        },
                        new
                        {
                            Id = 3,
                            CityOfSchool = 1,
                            DateOfBirth = new DateTime(2001, 3, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailAddress = "b.dejong@student.avans.nl",
                            Name = "Ben de Jong",
                            PhoneNr = "0634567890",
                            StudentNr = "2192344"
                        },
                        new
                        {
                            Id = 4,
                            CityOfSchool = 0,
                            DateOfBirth = new DateTime(1999, 4, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailAddress = "d.li@student.avans.nl",
                            Name = "Diana Li",
                            PhoneNr = "0645678901",
                            StudentNr = "2184399"
                        });
                });

            modelBuilder.Entity("Core.Domain.CanteenEmployee", b =>
                {
                    b.HasOne("Core.Domain.Canteen", "Canteen")
                        .WithMany()
                        .HasForeignKey("CanteenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Canteen");
                });

            modelBuilder.Entity("Core.Domain.Packet", b =>
                {
                    b.HasOne("Core.Domain.Canteen", "Canteen")
                        .WithMany()
                        .HasForeignKey("CanteenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Domain.Student", "ReservedBy")
                        .WithMany()
                        .HasForeignKey("StudentId");

                    b.Navigation("Canteen");

                    b.Navigation("ReservedBy");
                });

            modelBuilder.Entity("Core.Domain.PacketProduct", b =>
                {
                    b.HasOne("Core.Domain.Packet", "Packet")
                        .WithMany("Products")
                        .HasForeignKey("PacketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Domain.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Packet");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Core.Domain.Packet", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
